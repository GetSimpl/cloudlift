Outputs:
  CloudliftOptions:
    Description: Options used with cloudlift when building this service
    Value: '{"cloudlift_version": "test-version", "notifications_arn": "some", "services":
      {"FreeradiusServer": {"command": null, "memory_reservation": 1024, "udp_interface":
      {"container_port": 1812, "eip_allocaltion_id1": "eipalloc-02abb9e5e123492ee",
      "eip_allocaltion_id2": "eipalloc-02abb9e5e123492ee", "health_check_port": 1814,
      "internal": false, "nlb_enabled": true, "restrict_access_to": ["0.0.0.0/0"]}}}}'
  FreeradiusServerEcsServiceName:
    Description: The ECS name which needs to be entered
    Value: !GetAtt 'FreeradiusServer.Name'
  FreeradiusServerURL:
    Description: The URL at which the service is accessible
    Value: !Sub 'udp://${NLBFreeradiusServer.DNSName}'
  StackId:
    Description: The unique ID of the stack. To be supplied to circle CI environment
      variables to validate during deployment.
    Value: !Ref 'AWS::StackId'
  StackName:
    Description: The name of the stack
    Value: !Ref 'AWS::StackName'
Parameters:
  Environment:
    Default: production
    Description: ''
    Type: String
  NotificationSnsArn:
    Default: some
    Description: ''
    Type: String
  PrivateSubnet1:
    Default: subnet-09b6cd23af94861cc
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Default: subnet-0657bc2faa99ce5f7
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1:
    Default: subnet-0aeae8fe5e13a7ff7
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Default: subnet-096377a44ccb73aca
    Description: ''
    Type: AWS::EC2::Subnet::Id
  VPC:
    Default: vpc-00f07c5a6b6c9abdb
    Description: ''
    Type: AWS::EC2::VPC::Id
Resources:
  ECSServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole
      Path: /
      RoleName: !Sub 'ecs-svc-${AWS::StackName}-${AWS::Region}'
    Type: AWS::IAM::Role
  EcsHighCPUAlarmFreeradiusServer:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Alarm if CPU too high or metric disappears indicating instance
        is down
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'FreeradiusServer.Name'
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 300
      Statistic: Average
      Threshold: '80'
      TreatMissingData: breaching
    Type: AWS::CloudWatch::Alarm
  EcsHighMemoryAlarmFreeradiusServer:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Alarm if memory too high or metric disappears indicating instance
        is down
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'FreeradiusServer.Name'
      EvaluationPeriods: 1
      MetricName: MemoryUtilization
      Namespace: AWS/ECS
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 300
      Statistic: Average
      Threshold: '80'
      TreatMissingData: breaching
    Type: AWS::CloudWatch::Alarm
  EcsNoRunningTasksAlarmFreeradiusServer:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Alarm if the task count goes to zero, denoting service is
        down
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'FreeradiusServer.Name'
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: SampleCount
      Threshold: '1'
      TreatMissingData: breaching
    Type: AWS::CloudWatch::Alarm
  FailedCloudliftDeploymentsFreeradiusServer:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Cloudlift deployment timed out
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'FreeradiusServer.Name'
      EvaluationPeriods: 1
      MetricName: FailedCloudliftDeployments
      Namespace: ECS/DeploymentMetrics
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: Average
      Threshold: '0'
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  FreeradiusServer:
    DependsOn: LoadBalancerListenerFreeradiusServer
    Properties:
      Cluster: cluster-staging
      DesiredCount: 100
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: FreeradiusServerContainer
          ContainerPort: 1812
          TargetGroupArn: !Ref 'TargetGroupFreeradiusServer'
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'SGstagingFreeradiusServer'
          Subnets:
            - !Ref 'PrivateSubnet1'
            - !Ref 'PrivateSubnet2'
      PlacementStrategies:
        - Field: attribute:ecs.availability-zone
          Type: spread
      TaskDefinition: !Ref 'FreeradiusServerTaskDefinition'
    Type: AWS::ECS::Service
  FreeradiusServerRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      ManagedPolicyArns: []
    Type: AWS::IAM::Role
  FreeradiusServerTaskDefinition:
    Properties:
      ContainerDefinitions:
        - Cpu: 0
          Environment:
            - Name: PORT
              Value: '80'
          Essential: 'true'
          Image: 12537612.dkr.ecr.us-west-2.amazonaws.com/dummy-repo:1.1.1
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: staging-logs
              awslogs-region: us-west-2
              awslogs-stream-prefix: FreeradiusServer
          MemoryReservation: 1024
          Name: FreeradiusServerContainer
          PortMappings:
            - ContainerPort: 1812
              HostPort: 1812
              Protocol: udp
            - ContainerPort: 1814
              HostPort: 1814
              Protocol: tcp
          Secrets:
            - Name: LABEL
              ValueFrom: arn_secret_label_v1
      ExecutionRoleArn: !Ref 'FreeradiusServerTaskExecutionRole'
      Family: FreeradiusServerFamily
      NetworkMode: awsvpc
      PlacementConstraints: []
      TaskRoleArn: !Ref 'FreeradiusServerRole'
    Type: AWS::ECS::TaskDefinition
  FreeradiusServerTaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: FreeradiusServerTaskExecutionRolePolicy
    Type: AWS::IAM::Role
  LoadBalancerListenerFreeradiusServer:
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'TargetGroupFreeradiusServer'
          Type: forward
      LoadBalancerArn: !Ref 'NLBFreeradiusServer'
      Port: 1812
      Protocol: UDP
    Type: AWS::ElasticLoadBalancingV2::Listener
  NLBFreeradiusServer:
    Properties:
      Name: FreeradiusServerStaging
      Scheme: internet-facing
      SecurityGroups: []
      SubnetMappings:
        - AllocationId: eipalloc-02abb9e5e123492ee
          SubnetId: !Ref 'PublicSubnet1'
        - AllocationId: eipalloc-02abb9e5e123492ee
          SubnetId: !Ref 'PublicSubnet2'
      Tags:
        - Key: Name
          Value: FreeradiusServerStaging
      Type: network
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  SGstagingFreeradiusServer:
    Properties:
      GroupDescription: !Sub 'FreeradiusServer-alb-sg'
      GroupName: staging-FreeradiusServer
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: 1812
          IpProtocol: UDP
          ToPort: 1812
        - CidrIp: '0.0.0.0/0'
          FromPort: 1814
          IpProtocol: TCP
          ToPort: 1814
      VpcId: !Ref 'VPC'
    Type: AWS::EC2::SecurityGroup
  TargetGroupFreeradiusServer:
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPort: 1814
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 1812
      Protocol: UDP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref 'VPC'
    Type: AWS::ElasticLoadBalancingV2::TargetGroup