Outputs:
  CloudliftOptions:
    Description: Options used with cloudlift when building this service
    Value: '{"cloudlift_version": "test-version", "notifications_arn": "some", "ecr_repo":
      {"name": "test-service-repo"}, "services": {"Dummy": {"memory_reservation":
      1000, "command": null, "http_interface": {"internal": false, "container_port":
      7003, "restrict_access_to": ["0.0.0.0/0"], "health_check_path": "/elb-check",
      "deregistration_delay": 88, "load_balancing_algorithm": "round_robin", "health_check_interval_seconds":
      43, "health_check_timeout_seconds": 24, "health_check_healthy_threshold_count":
      6, "health_check_unhealthy_threshold_count": 4}, "deployment": {"maximum_percent":
      150}, "secrets_name": "dummy-config", "sidecars": [{"name": "redis", "image":
      "redis:latest", "memory_reservation": 256}], "container_labels": {"label1":
      "value1"}}, "DummyRunSidekiqsh": {"memory_reservation": 1000, "command": "./run-sidekiq.sh",
      "deployment": {"maximum_percent": 150}, "task_role_attached_managed_policy_arns":
      ["arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"], "secrets_name": "dummy-sidekiq-config"}}}'
  DummyEcsServiceName:
    Description: The ECS name which needs to be entered
    Value: !GetAtt 'Dummy.Name'
  DummyRunSidekiqshEcsServiceName:
    Description: The ECS name which needs to be entered
    Value: !GetAtt 'DummyRunSidekiqsh.Name'
  DummyRunSidekiqshSecretsName:
    Description: AWS secrets manager name to pull the secrets from
    Value: dummy-sidekiq-config
  DummySecretsName:
    Description: AWS secrets manager name to pull the secrets from
    Value: dummy-config
  ECRRepoName:
    Description: ECR repo to for docker images
    Value: test-service-repo
  StackId:
    Description: The unique ID of the stack. To be supplied to circle CI environment
      variables to validate during deployment.
    Value: !Ref 'AWS::StackId'
  StackName:
    Description: The name of the stack
    Value: !Ref 'AWS::StackName'
Parameters:
  Environment:
    Default: production
    Description: ''
    Type: String
  NotificationSnsArn:
    Default: some
    Description: ''
    Type: String
  PrivateSubnet1:
    Default: subnet-09b6cd23af94861cc
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Default: subnet-0657bc2faa99ce5f7
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1:
    Default: subnet-0aeae8fe5e13a7ff7
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Default: subnet-096377a44ccb73aca
    Description: ''
    Type: AWS::EC2::Subnet::Id
  VPC:
    Default: vpc-00f07c5a6b6c9abdb
    Description: ''
    Type: AWS::EC2::VPC::Id
Resources:
  Dummy:
    Properties:
      Cluster: cluster-staging
      DeploymentConfiguration:
        MaximumPercent: 150
        MinimumHealthyPercent: 100
      DesiredCount: 100
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: DummyContainer
          ContainerPort: 7003
          TargetGroupArn: !Ref 'TargetGroupDummy'
      PlacementStrategies:
        - Field: attribute:ecs.availability-zone
          Type: spread
      Role: !Ref 'ECSServiceRole'
      TaskDefinition: !Ref 'DummyTaskDefinition'
    Type: AWS::ECS::Service
  DummyRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      ManagedPolicyArns: []
    Type: AWS::IAM::Role
  DummyRunSidekiqsh:
    Properties:
      Cluster: cluster-staging
      DeploymentConfiguration:
        MaximumPercent: 150
        MinimumHealthyPercent: 100
      DesiredCount: 199
      LaunchType: EC2
      PlacementStrategies:
        - Field: attribute:ecs.availability-zone
          Type: spread
      TaskDefinition: !Ref 'DummyRunSidekiqshTaskDefinition'
    Type: AWS::ECS::Service
  DummyRunSidekiqshRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
    Type: AWS::IAM::Role
  DummyRunSidekiqshTaskDefinition:
    Properties:
      ContainerDefinitions:
        - Command:
            - ./run-sidekiq.sh
          Cpu: 0
          Environment:
            - Name: PORT
              Value: '80'
          Essential: 'true'
          Image: 12537612.dkr.ecr.us-west-2.amazonaws.com/test-service-repo:1.1.1
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: staging-logs
              awslogs-region: us-west-2
              awslogs-stream-prefix: DummyRunSidekiqsh
          Memory: 20480
          MemoryReservation: 1000
          Name: DummyRunSidekiqshContainer
          Secrets:
            - Name: LABEL
              ValueFrom: arn_secret_label_v1
      ExecutionRoleArn: !Ref 'DummyRunSidekiqshTaskExecutionRole'
      Family: stagingDummyRunSidekiqshFamily
      PlacementConstraints: []
      TaskRoleArn: !Ref 'DummyRunSidekiqshRole'
    Type: AWS::ECS::TaskDefinition
  DummyRunSidekiqshTaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - arn:aws:secretsmanager:us-west-2:12537612:secret:cloudlift-injected/staging/dummy/DummyRunSidekiqsh-??????
                  - arn:aws:secretsmanager:us-west-2:12537612:secret:dummy-sidekiq-config-??????
              - Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: DummyRunSidekiqshTaskExecutionRolePolicy
    Type: AWS::IAM::Role
  DummyTaskDefinition:
    Properties:
      ContainerDefinitions:
        - Cpu: 0
          DockerLabels:
            label1: value1
          Environment:
            - Name: PORT
              Value: '80'
          Essential: 'true'
          Image: 12537612.dkr.ecr.us-west-2.amazonaws.com/test-service-repo:1.1.1
          Links:
            - redisContainer:redis
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: staging-logs
              awslogs-region: us-west-2
              awslogs-stream-prefix: Dummy
          Memory: 20480
          MemoryReservation: 1000
          Name: DummyContainer
          PortMappings:
            - ContainerPort: 7003
          Secrets:
            - Name: LABEL
              ValueFrom: arn_secret_label_v1
        - Environment: []
          Essential: 'false'
          Image: redis:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: staging-logs
              awslogs-region: us-west-2
              awslogs-stream-prefix: Dummy
          MemoryReservation: 256
          Name: redisContainer
      ExecutionRoleArn: !Ref 'DummyTaskExecutionRole'
      Family: stagingDummyFamily
      PlacementConstraints: []
      TaskRoleArn: !Ref 'DummyRole'
    Type: AWS::ECS::TaskDefinition
  DummyTaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - arn:aws:secretsmanager:us-west-2:12537612:secret:cloudlift-injected/staging/dummy/Dummy-??????
                  - arn:aws:secretsmanager:us-west-2:12537612:secret:dummy-config-??????
              - Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: DummyTaskExecutionRolePolicy
    Type: AWS::IAM::Role
  ECSServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole
      Path: /
      RoleName: !Sub 'ecs-svc-${AWS::StackName}-${AWS::Region}'
    Type: AWS::IAM::Role
  EcsNoRunningTasksAlarmDummy:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Alarm if the task count goes to zero, denoting service is
        down
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'Dummy.Name'
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: SampleCount
      Threshold: '1'
      TreatMissingData: breaching
    Type: AWS::CloudWatch::Alarm
  EcsNoRunningTasksAlarmDummyRunSidekiqsh:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Alarm if the task count goes to zero, denoting service is
        down
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'DummyRunSidekiqsh.Name'
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: SampleCount
      Threshold: '1'
      TreatMissingData: breaching
    Type: AWS::CloudWatch::Alarm
  FailedCloudliftDeploymentsDummy:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Cloudlift deployment timed out
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'Dummy.Name'
      EvaluationPeriods: 1
      MetricName: FailedCloudliftDeployments
      Namespace: ECS/DeploymentMetrics
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: Average
      Threshold: '0'
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  FailedCloudliftDeploymentsDummyRunSidekiqsh:
    Properties:
      AlarmActions:
        - !Ref 'NotificationSnsArn'
      AlarmDescription: Cloudlift deployment timed out
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value: cluster-staging
        - Name: ServiceName
          Value: !GetAtt 'DummyRunSidekiqsh.Name'
      EvaluationPeriods: 1
      MetricName: FailedCloudliftDeployments
      Namespace: ECS/DeploymentMetrics
      OKActions:
        - !Ref 'NotificationSnsArn'
      Period: 60
      Statistic: Average
      Threshold: '0'
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  TargetGroupDummy:
    Properties:
      HealthCheckIntervalSeconds: 43
      HealthCheckPath: /elb-check
      HealthCheckTimeoutSeconds: 24
      HealthyThresholdCount: 6
      Matcher:
        HttpCode: 200-399
      Port: 7003
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '88'
        - Key: load_balancing.algorithm.type
          Value: round_robin
      UnhealthyThresholdCount: 4
      VpcId: !Ref 'VPC'
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
